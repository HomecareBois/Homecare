@model Homecare.Models.ViewModels.CaretakerViewModel

@{
    ViewBag.Title = "Opret bruger";
}

<h2>Opret bruger</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.user_rights, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> userRights = new List<SelectListItem>();
                userRights.Add(new SelectListItem { Text = "Admin", Value = "Admin" });
                userRights.Add(new SelectListItem { Text = "Bruger", Value = "Bruger" });
            }
            @Html.DropDownListFor(model => model.user_rights, userRights, "Vælg brugertype", new { @style = "padding: 7px;" })
            <br/>
            @Html.ValidationMessageFor(model => model.user_rights, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phonenumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.LoginMessage != null)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-success">
                @ViewBag.LoginMessage
            </div>
        </div>
    }

    @if (ViewBag.PhoneMessage != null)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="color: red !important">
                @ViewBag.PhoneMessage
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Opret" class="btn btn-default" />
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Tilbage", "Index", "Caretaker")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
